
fibonacci_gcc.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <_Z8multiplyii>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	89 7d fc             	mov    %edi,-0x4(%rbp)
   b:	89 75 f8             	mov    %esi,-0x8(%rbp)
   e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  11:	0f af 45 f8          	imul   -0x8(%rbp),%eax
  15:	5d                   	pop    %rbp
  16:	c3                   	ret    

0000000000000017 <main>:
  17:	f3 0f 1e fa          	endbr64 
  1b:	55                   	push   %rbp
  1c:	48 89 e5             	mov    %rsp,%rbp
  1f:	48 83 ec 20          	sub    $0x20,%rsp
  23:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  2a:	00 00 
  2c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  30:	31 c0                	xor    %eax,%eax
  32:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 39 <main+0x22>
  39:	48 89 c6             	mov    %rax,%rsi
  3c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 43 <main+0x2c>
  43:	48 89 c7             	mov    %rax,%rdi
  46:	e8 00 00 00 00       	call   4b <main+0x34>
  4b:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
  4f:	48 89 c6             	mov    %rax,%rsi
  52:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 59 <main+0x42>
  59:	48 89 c7             	mov    %rax,%rdi
  5c:	e8 00 00 00 00       	call   61 <main+0x4a>
  61:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  64:	83 f8 64             	cmp    $0x64,%eax
  67:	7e 57                	jle    c0 <main+0xa9>
  69:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 70 <main+0x59>
  70:	48 89 c6             	mov    %rax,%rsi
  73:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 7a <main+0x63>
  7a:	48 89 c7             	mov    %rax,%rdi
  7d:	e8 00 00 00 00       	call   82 <main+0x6b>
  82:	be 64 00 00 00       	mov    $0x64,%esi
  87:	48 89 c7             	mov    %rax,%rdi
  8a:	e8 00 00 00 00       	call   8f <main+0x78>
  8f:	48 89 c2             	mov    %rax,%rdx
  92:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 99 <main+0x82>
  99:	48 89 c6             	mov    %rax,%rsi
  9c:	48 89 d7             	mov    %rdx,%rdi
  9f:	e8 00 00 00 00       	call   a4 <main+0x8d>
  a4:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # ab <main+0x94>
  ab:	48 89 d6             	mov    %rdx,%rsi
  ae:	48 89 c7             	mov    %rax,%rdi
  b1:	e8 00 00 00 00       	call   b6 <main+0x9f>
  b6:	b8 01 00 00 00       	mov    $0x1,%eax
  bb:	e9 72 01 00 00       	jmp    232 <main+0x21b>
  c0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  c3:	89 c7                	mov    %eax,%edi
  c5:	e8 00 00 00 00       	call   ca <main+0xb3>
  ca:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  ce:	ba 01 00 00 00       	mov    $0x1,%edx
  d3:	be 00 00 00 00       	mov    $0x0,%esi
  d8:	48 89 c7             	mov    %rax,%rdi
  db:	e8 00 00 00 00       	call   e0 <main+0xc9>
  e0:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  e4:	48 89 c6             	mov    %rax,%rsi
  e7:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # ee <main+0xd7>
  ee:	48 89 c7             	mov    %rax,%rdi
  f1:	e8 00 00 00 00       	call   f6 <main+0xdf>
  f6:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # fd <main+0xe6>
  fd:	48 89 d6             	mov    %rdx,%rsi
 100:	48 89 c7             	mov    %rax,%rdi
 103:	e8 00 00 00 00       	call   108 <main+0xf1>
 108:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 10f <main+0xf8>
 10f:	48 89 d6             	mov    %rdx,%rsi
 112:	48 89 c7             	mov    %rax,%rdi
 115:	e8 00 00 00 00       	call   11a <main+0x103>
 11a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 121 <main+0x10a>
 121:	48 89 c6             	mov    %rax,%rsi
 124:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 12b <main+0x114>
 12b:	48 89 c7             	mov    %rax,%rdi
 12e:	e8 00 00 00 00       	call   133 <main+0x11c>
 133:	48 89 c2             	mov    %rax,%rdx
 136:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
 13a:	48 89 c6             	mov    %rax,%rsi
 13d:	48 89 d7             	mov    %rdx,%rdi
 140:	e8 00 00 00 00       	call   145 <main+0x12e>
 145:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 14c <main+0x135>
 14c:	48 89 d6             	mov    %rdx,%rsi
 14f:	48 89 c7             	mov    %rax,%rdi
 152:	e8 00 00 00 00       	call   157 <main+0x140>
 157:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
 15e:	eb 33                	jmp    193 <main+0x17c>
 160:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
 164:	48 89 c7             	mov    %rax,%rdi
 167:	e8 00 00 00 00       	call   16c <main+0x155>
 16c:	89 c6                	mov    %eax,%esi
 16e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 175 <main+0x15e>
 175:	48 89 c7             	mov    %rax,%rdi
 178:	e8 00 00 00 00       	call   17d <main+0x166>
 17d:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 184 <main+0x16d>
 184:	48 89 d6             	mov    %rdx,%rsi
 187:	48 89 c7             	mov    %rax,%rdi
 18a:	e8 00 00 00 00       	call   18f <main+0x178>
 18f:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
 193:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 196:	83 e8 02             	sub    $0x2,%eax
 199:	39 45 e8             	cmp    %eax,-0x18(%rbp)
 19c:	7c c2                	jl     160 <main+0x149>
 19e:	be 03 00 00 00       	mov    $0x3,%esi
 1a3:	bf 05 00 00 00       	mov    $0x5,%edi
 1a8:	e8 00 00 00 00       	call   1ad <main+0x196>
 1ad:	89 45 ec             	mov    %eax,-0x14(%rbp)
 1b0:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1b7 <main+0x1a0>
 1b7:	48 89 c6             	mov    %rax,%rsi
 1ba:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c1 <main+0x1aa>
 1c1:	48 89 c7             	mov    %rax,%rdi
 1c4:	e8 00 00 00 00       	call   1c9 <main+0x1b2>
 1c9:	48 89 c2             	mov    %rax,%rdx
 1cc:	8b 45 ec             	mov    -0x14(%rbp),%eax
 1cf:	89 c6                	mov    %eax,%esi
 1d1:	48 89 d7             	mov    %rdx,%rdi
 1d4:	e8 00 00 00 00       	call   1d9 <main+0x1c2>
 1d9:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 1e0 <main+0x1c9>
 1e0:	48 89 d6             	mov    %rdx,%rsi
 1e3:	48 89 c7             	mov    %rax,%rdi
 1e6:	e8 00 00 00 00       	call   1eb <main+0x1d4>
 1eb:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1f2 <main+0x1db>
 1f2:	48 89 c6             	mov    %rax,%rsi
 1f5:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1fc <main+0x1e5>
 1fc:	48 89 c7             	mov    %rax,%rdi
 1ff:	e8 00 00 00 00       	call   204 <main+0x1ed>
 204:	48 89 c2             	mov    %rax,%rdx
 207:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 20e <main+0x1f7>
 20e:	66 48 0f 6e c0       	movq   %rax,%xmm0
 213:	48 89 d7             	mov    %rdx,%rdi
 216:	e8 00 00 00 00       	call   21b <main+0x204>
 21b:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 222 <main+0x20b>
 222:	48 89 d6             	mov    %rdx,%rsi
 225:	48 89 c7             	mov    %rax,%rdi
 228:	e8 00 00 00 00       	call   22d <main+0x216>
 22d:	b8 00 00 00 00       	mov    $0x0,%eax
 232:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 236:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
 23d:	00 00 
 23f:	74 05                	je     246 <main+0x22f>
 241:	e8 00 00 00 00       	call   246 <main+0x22f>
 246:	c9                   	leave  
 247:	c3                   	ret    

0000000000000248 <_Z14printFibonaccii>:
 248:	f3 0f 1e fa          	endbr64 
 24c:	55                   	push   %rbp
 24d:	48 89 e5             	mov    %rsp,%rbp
 250:	48 83 ec 20          	sub    $0x20,%rsp
 254:	89 7d ec             	mov    %edi,-0x14(%rbp)
 257:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
 25e:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
 265:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26c <_Z14printFibonaccii+0x24>
 26c:	48 89 c6             	mov    %rax,%rsi
 26f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 276 <_Z14printFibonaccii+0x2e>
 276:	48 89 c7             	mov    %rax,%rdi
 279:	e8 00 00 00 00       	call   27e <_Z14printFibonaccii+0x36>
 27e:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 285 <_Z14printFibonaccii+0x3d>
 285:	48 89 d6             	mov    %rdx,%rsi
 288:	48 89 c7             	mov    %rax,%rdi
 28b:	e8 00 00 00 00       	call   290 <_Z14printFibonaccii+0x48>
 290:	8b 45 f0             	mov    -0x10(%rbp),%eax
 293:	89 c6                	mov    %eax,%esi
 295:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 29c <_Z14printFibonaccii+0x54>
 29c:	48 89 c7             	mov    %rax,%rdi
 29f:	e8 00 00 00 00       	call   2a4 <_Z14printFibonaccii+0x5c>
 2a4:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 2ab <_Z14printFibonaccii+0x63>
 2ab:	48 89 d6             	mov    %rdx,%rsi
 2ae:	48 89 c7             	mov    %rax,%rdi
 2b1:	e8 00 00 00 00       	call   2b6 <_Z14printFibonaccii+0x6e>
 2b6:	8b 45 f4             	mov    -0xc(%rbp),%eax
 2b9:	89 c6                	mov    %eax,%esi
 2bb:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2c2 <_Z14printFibonaccii+0x7a>
 2c2:	48 89 c7             	mov    %rax,%rdi
 2c5:	e8 00 00 00 00       	call   2ca <_Z14printFibonaccii+0x82>
 2ca:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 2d1 <_Z14printFibonaccii+0x89>
 2d1:	48 89 d6             	mov    %rdx,%rsi
 2d4:	48 89 c7             	mov    %rax,%rdi
 2d7:	e8 00 00 00 00       	call   2dc <_Z14printFibonaccii+0x94>
 2dc:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
 2e3:	eb 57                	jmp    33c <_Z14printFibonaccii+0xf4>
 2e5:	8b 45 f4             	mov    -0xc(%rbp),%eax
 2e8:	89 45 fc             	mov    %eax,-0x4(%rbp)
 2eb:	8b 55 f4             	mov    -0xc(%rbp),%edx
 2ee:	8b 45 f0             	mov    -0x10(%rbp),%eax
 2f1:	89 d6                	mov    %edx,%esi
 2f3:	89 c7                	mov    %eax,%edi
 2f5:	e8 00 00 00 00       	call   2fa <_Z14printFibonaccii+0xb2>
 2fa:	89 45 f4             	mov    %eax,-0xc(%rbp)
 2fd:	8b 45 f4             	mov    -0xc(%rbp),%eax
 300:	89 c6                	mov    %eax,%esi
 302:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 309 <_Z14printFibonaccii+0xc1>
 309:	48 89 c7             	mov    %rax,%rdi
 30c:	e8 00 00 00 00       	call   311 <_Z14printFibonaccii+0xc9>
 311:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 318 <_Z14printFibonaccii+0xd0>
 318:	48 89 d6             	mov    %rdx,%rsi
 31b:	48 89 c7             	mov    %rax,%rdi
 31e:	e8 00 00 00 00       	call   323 <_Z14printFibonaccii+0xdb>
 323:	8b 45 fc             	mov    -0x4(%rbp),%eax
 326:	89 45 f0             	mov    %eax,-0x10(%rbp)
 329:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 32f <_Z14printFibonaccii+0xe7>
 32f:	83 c0 01             	add    $0x1,%eax
 332:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 338 <_Z14printFibonaccii+0xf0>
 338:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
 33c:	8b 45 ec             	mov    -0x14(%rbp),%eax
 33f:	83 e8 01             	sub    $0x1,%eax
 342:	39 45 f8             	cmp    %eax,-0x8(%rbp)
 345:	7c 9e                	jl     2e5 <_Z14printFibonaccii+0x9d>
 347:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 34e <_Z14printFibonaccii+0x106>
 34e:	48 89 c6             	mov    %rax,%rsi
 351:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 358 <_Z14printFibonaccii+0x110>
 358:	48 89 c7             	mov    %rax,%rdi
 35b:	e8 00 00 00 00       	call   360 <_Z14printFibonaccii+0x118>
 360:	48 89 c2             	mov    %rax,%rdx
 363:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 369 <_Z14printFibonaccii+0x121>
 369:	89 c6                	mov    %eax,%esi
 36b:	48 89 d7             	mov    %rdx,%rdi
 36e:	e8 00 00 00 00       	call   373 <_Z14printFibonaccii+0x12b>
 373:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 37a <_Z14printFibonaccii+0x132>
 37a:	48 89 d6             	mov    %rdx,%rsi
 37d:	48 89 c7             	mov    %rax,%rdi
 380:	e8 00 00 00 00       	call   385 <_Z14printFibonaccii+0x13d>
 385:	90                   	nop
 386:	c9                   	leave  
 387:	c3                   	ret    

0000000000000388 <_Z41__static_initialization_and_destruction_0ii>:
 388:	f3 0f 1e fa          	endbr64 
 38c:	55                   	push   %rbp
 38d:	48 89 e5             	mov    %rsp,%rbp
 390:	48 83 ec 10          	sub    $0x10,%rsp
 394:	89 7d fc             	mov    %edi,-0x4(%rbp)
 397:	89 75 f8             	mov    %esi,-0x8(%rbp)
 39a:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
 39e:	75 3b                	jne    3db <_Z41__static_initialization_and_destruction_0ii+0x53>
 3a0:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
 3a7:	75 32                	jne    3db <_Z41__static_initialization_and_destruction_0ii+0x53>
 3a9:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3b0 <_Z41__static_initialization_and_destruction_0ii+0x28>
 3b0:	48 89 c7             	mov    %rax,%rdi
 3b3:	e8 00 00 00 00       	call   3b8 <_Z41__static_initialization_and_destruction_0ii+0x30>
 3b8:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3bf <_Z41__static_initialization_and_destruction_0ii+0x37>
 3bf:	48 89 c2             	mov    %rax,%rdx
 3c2:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3c9 <_Z41__static_initialization_and_destruction_0ii+0x41>
 3c9:	48 89 c6             	mov    %rax,%rsi
 3cc:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3d3 <_Z41__static_initialization_and_destruction_0ii+0x4b>
 3d3:	48 89 c7             	mov    %rax,%rdi
 3d6:	e8 00 00 00 00       	call   3db <_Z41__static_initialization_and_destruction_0ii+0x53>
 3db:	90                   	nop
 3dc:	c9                   	leave  
 3dd:	c3                   	ret    

00000000000003de <_GLOBAL__sub_I_global_counter>:
 3de:	f3 0f 1e fa          	endbr64 
 3e2:	55                   	push   %rbp
 3e3:	48 89 e5             	mov    %rsp,%rbp
 3e6:	be ff ff 00 00       	mov    $0xffff,%esi
 3eb:	bf 01 00 00 00       	mov    $0x1,%edi
 3f0:	e8 93 ff ff ff       	call   388 <_Z41__static_initialization_and_destruction_0ii>
 3f5:	5d                   	pop    %rbp
 3f6:	c3                   	ret    

Disassembly of section .text._ZN9FibonacciIiEC2Eii:

0000000000000000 <_ZN9FibonacciIiEC1Eii>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	89 55 f0             	mov    %edx,-0x10(%rbp)
  12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  16:	8b 55 f4             	mov    -0xc(%rbp),%edx
  19:	89 10                	mov    %edx,(%rax)
  1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1f:	8b 55 f0             	mov    -0x10(%rbp),%edx
  22:	89 50 04             	mov    %edx,0x4(%rax)
  25:	90                   	nop
  26:	5d                   	pop    %rbp
  27:	c3                   	ret    

Disassembly of section .text._ZlsRSoRK9FibonacciIiE:

0000000000000000 <_ZlsRSoRK9FibonacciIiE>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1f <_ZlsRSoRK9FibonacciIiE+0x1f>
  1f:	48 89 d6             	mov    %rdx,%rsi
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <_ZlsRSoRK9FibonacciIiE+0x2a>
  2a:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 31 <_ZlsRSoRK9FibonacciIiE+0x31>
  31:	48 89 d6             	mov    %rdx,%rsi
  34:	48 89 c7             	mov    %rax,%rdi
  37:	e8 00 00 00 00       	call   3c <_ZlsRSoRK9FibonacciIiE+0x3c>
  3c:	48 89 c2             	mov    %rax,%rdx
  3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43:	8b 00                	mov    (%rax),%eax
  45:	89 c6                	mov    %eax,%esi
  47:	48 89 d7             	mov    %rdx,%rdi
  4a:	e8 00 00 00 00       	call   4f <_ZlsRSoRK9FibonacciIiE+0x4f>
  4f:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 56 <_ZlsRSoRK9FibonacciIiE+0x56>
  56:	48 89 d6             	mov    %rdx,%rsi
  59:	48 89 c7             	mov    %rax,%rdi
  5c:	e8 00 00 00 00       	call   61 <_ZlsRSoRK9FibonacciIiE+0x61>
  61:	48 89 c2             	mov    %rax,%rdx
  64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  68:	8b 40 04             	mov    0x4(%rax),%eax
  6b:	89 c6                	mov    %eax,%esi
  6d:	48 89 d7             	mov    %rdx,%rdi
  70:	e8 00 00 00 00       	call   75 <_ZlsRSoRK9FibonacciIiE+0x75>
  75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  79:	c9                   	leave  
  7a:	c3                   	ret    

Disassembly of section .text._ZN9FibonacciIiE4nextEv:

0000000000000000 <_ZN9FibonacciIiE4nextEv>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  10:	8b 00                	mov    (%rax),%eax
  12:	89 45 fc             	mov    %eax,-0x4(%rbp)
  15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  19:	8b 50 04             	mov    0x4(%rax),%edx
  1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  20:	89 10                	mov    %edx,(%rax)
  22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  26:	8b 50 04             	mov    0x4(%rax),%edx
  29:	8b 45 fc             	mov    -0x4(%rbp),%eax
  2c:	01 c2                	add    %eax,%edx
  2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  32:	89 50 04             	mov    %edx,0x4(%rax)
  35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  39:	8b 40 04             	mov    0x4(%rax),%eax
  3c:	5d                   	pop    %rbp
  3d:	c3                   	ret    

Disassembly of section .text._Z3addIiET_S0_S0_:

0000000000000000 <_Z3addIiET_S0_S0_>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	89 7d fc             	mov    %edi,-0x4(%rbp)
   b:	89 75 f8             	mov    %esi,-0x8(%rbp)
   e:	8b 55 fc             	mov    -0x4(%rbp),%edx
  11:	8b 45 f8             	mov    -0x8(%rbp),%eax
  14:	01 d0                	add    %edx,%eax
  16:	5d                   	pop    %rbp
  17:	c3                   	ret    
